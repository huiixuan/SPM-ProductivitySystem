name: CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    backend-tests:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:16
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd "pg_isready -U postgres"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"

            - name: Install backend dependencies
              working-directory: backend
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Run backend tests with coverage
              working-directory: backend
              env:
                  DB_NAME: postgres
                  DB_USER: postgres
                  DB_PASSWORD: postgres
                  DB_HOST: localhost
                  DB_PORT: 5432
                  PYTHONPATH: ${{ github.workspace }}/backend
              run: pytest

            - name: Upload coverage report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: backend-coverage
                  path: backend/coverage.xml

    frontend:
        runs-on: ubuntu-latest
        needs: backend-tests
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Install frontend dependencies
              working-directory: frontend
              run: npm ci

            - name: Build frontend
              working-directory: frontend
              run: npm run build

    docker-build:
        runs-on: ubuntu-latest
        needs:
            - backend-tests
            - frontend
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Build Docker image
              run: docker build -t productivity-system:latest .
